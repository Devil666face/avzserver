package view

import "strings"

templ Navbar(v *View, m Map) {
	<nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
		<div class="container-fluid">
			<a
				type="button"
				class="navbar-brand"
				hx-get={ v.URL("index") }
				hx-swap="outerHTML"
				hx-target="#container"
				hx-select="#container"
				hx-push-url="true"
				onclick="onNavButtonClick(this)"
			>
				@emoji("üö´‚ò£Ô∏è") {
					Anti-virus bases			
				}
			</a>
			<button
				class="navbar-toggler"
				type="button"
				data-bs-toggle="collapse"
				data-bs-target="#navbarScroll"
				aria-controls="navbarScroll"
				aria-expanded="false"
				aria-label="Toggle navigation"
			>
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarScroll">
				<ul class="navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll">
					<li class="nav-item">
						<a
							type="button"
							class={ getNavButtonClass(v, "bases_list") }
							hx-get={ v.URL("bases_list") }
							hx-swap="innerHTML"
							hx-target="#container"
							hx-push-url="true"
							onclick="onNavButtonClick(this)"
						>
							@emoji("üì¶") {
								–ë–∞–∑—ã						
							}
						</a>
					</li>
					if v.CurrentUser().Admin {
						<li class="nav-item">
							<a
								type="button"
								class={ getNavButtonClass(v, "user_list") }
								hx-get={ v.URL("user_list") }
								hx-swap="outerHTML"
								hx-target="#container"
								hx-select="#container"
								hx-push-url="true"
								onclick="onNavButtonClick(this)"
							>
								@emoji("üë•") {
									–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
								}
							</a>
						</li>
					}
					<li class="nav-item">
						<a
							type="button"
							class="nav-link"
							hx-post={ v.URL("logout") }
						>
							@emoji("‚úã") {
								–í—ã–π—Ç–∏
							}
						</a>
					</li>
				</ul>
				<div class="d-flex">
					<a
						type="button"
						class="nav-link"
						data-bs-toggle="modal"
						data-bs-target="#update_user"
					>
						@emoji("üë§") {
							{ v.CurrentUser().Email }
						}
					</a>
				</div>
			</div>
		</div>
	</nav>
	@onNavButtonClick()
	@Modal("update_user") {
		@UserUpdate(v,m)
	}
}

func getNavButtonClass(v *View, urlname string) string {
	c := []string{"nav-link"}
	if v.IsCurrentURL(v.URL(urlname)) {
		c = append(c, "active")
	}
	return strings.Join(c, " ")
}

templ onNavButtonClick() {
	<script>
		function onNavButtonClick(el) {
			document.querySelectorAll('.nav-link').forEach(function(button) {
				button.classList.remove('active');
			});
			if (!el.classList.contains("active")){
			  el.classList.add('active');
			}
		}
	</script>
}
