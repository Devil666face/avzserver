package view

import "github.com/Devil666face/avzserver/pkg/file"
import "strings"
import "unicode"

var emojiMap = map[string]string{
	"KAV_old":   "🦠",
	"KES":       "💻",
	"KESL":      "🐧",
	"KLMS":      "📧",
	"KSC":       "🎚",
	"KSLVA":     "📺",
	"KESA":      "📱",
	"DRW_ESS":   "🛡",
	"DRW_SS":    "💻",
	"DRW_Linux": "🐧",
}

func getEmojiIcon(f file.File) string {
	if f.IsDir {
		return emojiIconFolder(f)
	}
	return emojiIconFile(f)
}

func emojiIconFolder(f file.File) string {
	switch {
	case f.Name == "DrWeb":
		return "🕷"
	case f.Name == "Kaspersky":
		return "🦠"
	default:
		return "📂"
	}
}

func beforeFirstDigit(input string) string {
	var result string
	for _, char := range input {
		if unicode.IsDigit(char) {
			return result
		}
		result += string(char)
	}
	return result
}

func emojiIconFile(f file.File) string {
	s := strings.Split(f.Name, "_")
	switch {
	case strings.HasSuffix(f.Name, ".iso"):
		return "📀"
	case strings.HasSuffix(f.Name, ".md5") || strings.HasSuffix(f.Name, ".cksum"):
		return "🔐"
	case strings.ContainsAny(f.Name, "DRW"):
		if e, ok := emojiMap[s[0]+"_"+beforeFirstDigit(s[1])]; ok {
			return e
		}
		return "🕷"
	case strings.HasPrefix(f.Name, "K"):
		if e, ok := emojiMap[s[0]]; ok {
			return e
		}
		return "🦠"
	case strings.HasSuffix(f.Name, ".zip") || strings.HasSuffix(f.Name, ".tar.gz"):
		return "🗃"
	default:
		return "📄"
	}
}

templ BasesList(v *View, m Map) {
	@BaseContainer("Bases",v,m) {
		@BasesContent(v,m)
	}
}
